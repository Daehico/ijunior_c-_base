using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GenericCollection
{
    class Program
    {
        static void Main(string[] args)
        {
            Dictionary<string, string> dictionary = new Dictionary<string, string>();
            dictionary.Add("Итерация", "организация обработки данных, при которой действия повторяются многократно, не приводя при этом к вызовам самих себя.");
            dictionary.Add("ООП", "методология программирования, основанная на представлении программы в виде совокупности объектов, каждый из которых является экземпляром определённого класса, а классы образуют иерархию наследования");
            dictionary.Add("Абстракция", "это использование только тех характеристик объекта, которые с достаточной точностью представляют его в данной системе. Основная идея состоит в том, чтобы представить объект минимальным набором полей и методов и при этом с достаточной точностью для решаемой задачи.");
            dictionary.Add("Инкапсуляция", "в информатике размещение в одном компоненте данных и методов, которые с ними работают. Также может означать скрытие внутренней реализации от других компонентов. Например, доступ к скрытой переменной может предоставляться не напрямую, а с помощью методов для чтения (геттер) и изменения (сеттер) её значения.");
            dictionary.Add("Наследования", "концепция объектно-ориентированного программирования, согласно которой абстрактный тип данных может наследовать данные и функциональность некоторого существующего типа, способствуя повторному использованию компонентов программного обеспечения.");
            dictionary.Add("Полиморфизм", "в языках программирования и теории типов — способность функции обрабатывать данные разных типов");

            string word;

            while (true)
            {
                Console.WriteLine("Данная программа выведет значение введенного вами слова.");
                Console.Write("Введите слово: ");
                word = Console.ReadLine();
                SearchWordInDictionary(dictionary, word);
            }
        }

        static void SearchWordInDictionary(Dictionary<string, string> dictionary, string word)
        {
            if (dictionary.ContainsKey(word))
            {
                Console.WriteLine(dictionary[word]);
            }
            else
            {
                Console.WriteLine("Данное слово не содержится в нашем словаре.");
            }
        }
    }
}
